# Generated by Django 3.2.3 on 2021-06-03 13:12

from django.db import migrations, models
import django.db.models.deletion


def move_inventories_to_new_table(apps, schema_editor):
    DiscordUser = apps.get_model("botdata", "DiscordUser")
    UserInventory = apps.get_model("botdata", "UserInventory")

    for user in DiscordUser.objects.exclude(inventory__exact=[]):
        inventory, _ = UserInventory.objects.get_or_create(user=user)
        for item_data in user.inventory:
            if item_data['type'] == "lootbox":
                if item_data['action'] == "welcome":
                    inventory.lootbox_welcome_left += item_data.get("uses", 1)
                elif item_data['action'] in ["foie_gras", "fois_gras"]:
                    inventory.lootbox_boss_left += item_data.get("uses", 1)
                elif item_data['action'] == "i_voted":
                    inventory.lootbox_vote_left += item_data.get("uses", 1)
                else:
                    raise TypeError(f"Unknown lootbox type in {user} inventory: {item_data}.")
            elif item_data['type'] == "item":
                if item_data['action'] == "set_vip":
                    inventory.item_vip_card_left += item_data.get("uses", 1)
                elif item_data['action'] == "add_exp":
                    if item_data['amount'] <= 15:
                        inventory.item_mini_exp_boost_left += item_data.get("uses", 1)
                    elif item_data['amount'] <= 35:
                        inventory.item_norm_exp_boost_left += item_data.get("uses", 1)
                    else:
                        inventory.item_maxi_exp_boost_left += item_data.get("uses", 1)
                elif item_data['action'] == "bullet":
                    inventory.item_one_bullet_left += item_data.get("uses", 1)
                elif item_data['action'] == "spawn_ducks":
                    inventory.item_spawn_ducks_left += item_data.get("uses", 1)
                elif item_data['action'] == "refill_magazines":
                    inventory.item_refill_magazines_left += item_data.get("uses", 1)
                else:
                    raise TypeError(f"Unknown item action in {user} inventory: {item_data}.")
        inventory.save()


class Migration(migrations.Migration):

    dependencies = [
        ('botdata', '0013_discordchannel_prestige_to_roles_ids_mapping'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInventory',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='botdata.discorduser')),
                ('lootbox_welcome_left', models.IntegerField(default=1)),
                ('lootbox_boss_left', models.IntegerField(default=0)),
                ('lootbox_vote_left', models.IntegerField(default=0)),
                ('item_vip_card_left', models.IntegerField(default=0)),
                ('item_mini_exp_boost_left', models.IntegerField(default=0)),
                ('item_norm_exp_boost_left', models.IntegerField(default=0)),
                ('item_maxi_exp_boost_left', models.IntegerField(default=0)),
                ('item_one_bullet_left', models.IntegerField(default=0)),
                ('item_spawn_ducks_left', models.IntegerField(default=0)),
                ('item_refill_magazines_left', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'inventories',
            },
        ),
        migrations.RunPython(
            move_inventories_to_new_table, migrations.RunPython.noop
        )
    ]
