# Generated by Django 3.1.4 on 2020-12-12 01:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aerich',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=255)),
                ('app', models.CharField(max_length=20)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'aerich',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Channels',
            fields=[
                ('discord_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('webhook_urls', models.JSONField()),
                ('api_key', models.UUIDField(blank=True, null=True)),
                ('use_webhooks', models.BooleanField()),
                ('use_emojis', models.BooleanField()),
                ('enabled', models.BooleanField()),
                ('allow_global_items', models.BooleanField()),
                ('tax_on_user_send', models.SmallIntegerField()),
                ('mentions_when_killed', models.BooleanField()),
                ('show_duck_lives', models.BooleanField()),
                ('kill_on_miss_chance', models.SmallIntegerField()),
                ('duck_frighten_chance', models.SmallIntegerField()),
                ('clover_min_experience', models.SmallIntegerField()),
                ('clover_max_experience', models.SmallIntegerField()),
                ('base_duck_exp', models.SmallIntegerField()),
                ('per_life_exp', models.SmallIntegerField()),
                ('ducks_per_day', models.SmallIntegerField()),
                ('night_start_at', models.IntegerField()),
                ('night_end_at', models.IntegerField()),
                ('spawn_weight_normal_ducks', models.SmallIntegerField()),
                ('spawn_weight_super_ducks', models.SmallIntegerField()),
                ('spawn_weight_baby_ducks', models.SmallIntegerField()),
                ('spawn_weight_prof_ducks', models.SmallIntegerField()),
                ('spawn_weight_ghost_ducks', models.SmallIntegerField()),
                ('spawn_weight_moad_ducks', models.SmallIntegerField()),
                ('spawn_weight_mechanical_ducks', models.SmallIntegerField()),
                ('spawn_weight_armored_ducks', models.SmallIntegerField()),
                ('spawn_weight_golden_ducks', models.SmallIntegerField()),
                ('spawn_weight_plastic_ducks', models.SmallIntegerField()),
                ('spawn_weight_kamikaze_ducks', models.SmallIntegerField()),
                ('spawn_weight_night_ducks', models.SmallIntegerField()),
                ('spawn_weight_sleeping_ducks', models.SmallIntegerField()),
                ('ducks_time_to_live', models.SmallIntegerField()),
                ('super_ducks_min_life', models.SmallIntegerField()),
                ('super_ducks_max_life', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'channels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guilds',
            fields=[
                ('discord_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('prefix', models.CharField(blank=True, max_length=20, null=True)),
                ('vip', models.BooleanField()),
                ('language', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'guilds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Members',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'members',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prestige', models.SmallIntegerField()),
                ('prestige_last_daily', models.DateTimeField()),
                ('prestige_dailies', models.IntegerField()),
                ('active_powerups', models.JSONField()),
                ('shooting_stats', models.JSONField()),
                ('stored_achievements', models.JSONField()),
                ('experience', models.BigIntegerField()),
                ('spent_experience', models.BigIntegerField()),
                ('givebacks', models.IntegerField()),
                ('found_items', models.JSONField()),
                ('bought_items', models.JSONField()),
                ('bullets', models.IntegerField()),
                ('magazines', models.IntegerField()),
                ('last_giveback', models.DateTimeField()),
                ('best_times', models.JSONField()),
                ('killed', models.JSONField()),
                ('hugged', models.JSONField()),
                ('hurted', models.JSONField()),
                ('resisted', models.JSONField()),
                ('frightened', models.JSONField()),
            ],
            options={
                'db_table': 'players',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('discord_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('discriminator', models.CharField(max_length=4)),
                ('times_ran_example_command', models.IntegerField()),
                ('inventory', models.JSONField()),
                ('trophys', models.JSONField()),
                ('ping_friendly', models.BooleanField()),
                ('language', models.CharField(max_length=6)),
                ('first_use', models.BooleanField()),
                ('access_level_override', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
