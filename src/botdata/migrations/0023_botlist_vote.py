# Generated by Django 3.1.6 on 2021-02-14 21:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('botdata', '0022_auto_20210214_2107'),
    ]

    operations = [
        migrations.CreateModel(
            name='BotList',
            fields=[
                ('key', models.CharField(help_text='The unique key to recognise the bot list', max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the bot list', max_length=128)),
                ('bot_url', models.URLField(help_text='URL for the main bot page')),
                ('auth', models.TextField(help_text='Token used to authenticate requests to/from the bot')),
                ('can_vote', models.BooleanField(default=True, help_text='Can people vote (more than once) on that list ?')),
                ('vote_url', models.URLField(blank=True, help_text='URL for an user to vote')),
                ('vote_every', models.DurationField(blank=True, help_text='How often can users vote ?', null=True)),
                ('check_vote_url', models.URLField(blank=True, help_text='URL the bot can use to check if an user voted recently')),
                ('check_vote_key', models.CharField(blank=True, default='voted', help_text='Key in the returned JSON to check for presence of vote', max_length=128)),
                ('check_vote_negate', models.BooleanField(default=True, help_text='Does the boolean says if the user has voted (True) or if he can vote (False) ?')),
                ('webhook_handler', models.CharField(choices=[('generic', 'generic'), ('top.gg', 'top.gg')], default='generic', help_text="What is the function that'll receive the request from the vote hooks", max_length=20)),
                ('webhook_authorization_header', models.CharField(blank=True, default='Authorization', help_text='Name of the header used to authenticate webhooks requests', max_length=20)),
                ('webhook_user_id_json_field', models.CharField(blank=True, default='id', help_text='Key that gives the user ID in the provided JSON', max_length=20)),
                ('webhook_auth', models.TextField(blank=True, help_text='Secret used for authentication of the webhooks messages if not the same the auth token')),
                ('post_stats_method', models.CharField(choices=[('POST', 'POST'), ('PATCH', 'PATCH')], default='POST', help_text='What HTTP method should be used to send the stats', max_length=10)),
                ('post_stats_url', models.URLField(blank=True, help_text='Endpoint that will receive statistics')),
                ('post_stats_server_count_key', models.CharField(blank=True, default='server_count', help_text='Name of the server count key in the statistics JSON', max_length=128)),
                ('post_stats_shard_count_key', models.CharField(blank=True, default='shard_count', help_text='Name of the shard count key in the statistics JSON', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at', models.DateTimeField(auto_now_add=True)),
                ('multiplicator', models.IntegerField(default=1)),
                ('bot_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='botdata.botlist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='botdata.discorduser')),
            ],
        ),
    ]
